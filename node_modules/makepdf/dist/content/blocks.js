"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeBlock = exports.makeSeparator = void 0;
/** Return a separator node with given properties */
function makeSeparator(config, props) {
    return __assign({ table: { body: [[{ stack: [] }]], widths: ["*"] }, layout: "separator", borders: [0, config.styles.separator.lineWidth, 0, 0], margin: config.styles.separator.margin }, props);
}
exports.makeSeparator = makeSeparator;
/** Return a block (table) with given properties */
function makeBlock(stack, props) {
    // don't add a single paragraph, just treat as text
    if (stack.length === 1 && stack[0].style === "p") {
        stack[0].style = undefined;
    }
    // create a table structure
    var result = {
        table: {
            widths: ["*"],
            body: [
                [
                    __assign({ border: [true, true, true, true], stack: stack }, props),
                ],
            ],
        },
        layout: "block",
        style: "block_outer",
    };
    // wrap in 'unbreakable' stack if needed
    if (props.unbreakable) {
        result = {
            unbreakable: true,
            stack: [result],
        };
    }
    return result;
}
exports.makeBlock = makeBlock;
